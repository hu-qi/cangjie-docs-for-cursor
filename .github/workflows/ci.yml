name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        cd crawler
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        playwright install chromium
    
    - name: Test crawler scripts
      run: |
        cd crawler
        python -c "import sys; print('Python version:', sys.version)"
        python -c "import playwright; print('Playwright installed successfully')"
        python -c "import bs4; print('BeautifulSoup installed successfully')"
    
    - name: Lint with flake8
      run: |
        cd crawler
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || true
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics || true

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install Python dependencies
      run: |
        cd crawler
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        playwright install chromium
    
    - name: Install Node.js dependencies
      run: npm ci
    
    - name: Run simple test (optional)
      run: |
        cd crawler
        timeout 30s python simple_test.py || echo "Simple test completed or timed out"
    
    - name: Create basic docs structure
      run: |
        mkdir -p docs
        echo "# Cangjie Documentation" > docs/index.md
        echo "This is the Cangjie documentation site." >> docs/index.md
    
    - name: Generate sidebar (optional)
      run: |
        cd crawler
        python generate_sidebar.py || echo "Sidebar generation skipped"
    
    - name: Build VitePress site
      run: npm run build
    
    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: vitepress-build
        path: docs/.vitepress/dist/